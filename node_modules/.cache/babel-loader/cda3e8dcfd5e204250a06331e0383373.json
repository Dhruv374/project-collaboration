{"ast":null,"code":"var _jsxFileName = \"/Users/dhruvpatel/Desktop/poject-redux/src/Tasks.js\",\n    _s = $RefreshSig$(),\n    _s2 = $RefreshSig$(),\n    _s3 = $RefreshSig$(),\n    _s4 = $RefreshSig$(),\n    _s5 = $RefreshSig$(),\n    _s6 = $RefreshSig$(),\n    _s7 = $RefreshSig$(),\n    _s8 = $RefreshSig$();\n\nimport { faUserInjured } from '@fortawesome/free-solid-svg-icons';\nimport React from 'react';\nimport { useMemo } from 'react';\nimport ReactDOM from 'react-dom';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { useCallback, useState } from 'react/cjs/react.development';\nimport actions from './store/actions';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nlet statusMapping = [\"Not started\", \"In-progress\", \"On hold\", \"Completed\"];\nlet monthMapping = [\"Jan\", \"Feb\", \"Mar\", \"Apr\", \"May\", \"Jun\", \"Jul\", \"Aug\", \"Sep\", \"Oct\", \"Nov\", \"Dec\"];\nlet statusColorMapping = [\"yellow\", \"purple\", \"red\", \"chartreuse\"];\nlet mapStatus = {\n  \"Not started\": 0,\n  \"In-progress\": 1,\n  \"On hold\": 2,\n  \"Completed\": 3\n};\n\nfunction getDateString(date) {\n  let dateString = \" \";\n  dateString += date.slice(8, 10);\n  dateString += \" \";\n  dateString += monthMapping[+date.slice(5, 7) - 1];\n  dateString += \",\";\n  dateString += date.slice(0, 4);\n  return dateString;\n}\n\nfunction getStageString(stages) {\n  let totalStages = 0;\n  let completedStages = 0;\n\n  for (let prop in stages) {\n    totalStages++;\n\n    if (stages[prop]) {\n      completedStages++;\n    }\n  }\n\n  let stagesString = \" \" + completedStages + \"/\" + totalStages;\n  return stagesString;\n}\n\nfunction TaskInfo({\n  task\n}) {\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"taskInfo\",\n    children: [/*#__PURE__*/_jsxDEV(\"span\", {\n      className: \"taskStatus\",\n      children: [/*#__PURE__*/_jsxDEV(\"i\", {\n        className: \"fa fa-square taskStatusSymbol\",\n        \"aria-hidden\": \"true\",\n        style: {\n          color: statusColorMapping[task.status]\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 17\n      }, this), \" \", statusMapping[task.status]]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n      className: \"taskDue\",\n      children: [/*#__PURE__*/_jsxDEV(\"i\", {\n        className: \"fa fa-clock-o\",\n        \"aria-hidden\": \"true\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 17\n      }, this), \" \", getDateString(task.dueDate)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n      children: [/*#__PURE__*/_jsxDEV(\"i\", {\n        className: \"fa fa-check-square-o\",\n        \"aria-hidden\": \"true\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 17\n      }, this), \" \", getStageString(task.stages)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 47,\n    columnNumber: 9\n  }, this);\n}\n\n_c = TaskInfo;\nconst TaskImage = /*#__PURE__*/React.memo(_c2 = function ({\n  src\n}) {\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"taskImage\",\n    children: /*#__PURE__*/_jsxDEV(\"img\", {\n      src: src,\n      height: \"160px\",\n      width: \"252px\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 63,\n    columnNumber: 9\n  }, this);\n});\n_c3 = TaskImage;\nconst TaskCard = /*#__PURE__*/React.memo(_c4 = function ({\n  task,\n  editClick\n}) {\n  function editCallback() {\n    editClick(task);\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"card\",\n    onClick: editCallback,\n    children: [/*#__PURE__*/_jsxDEV(TaskImage, {\n      src: task.imageUrl\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"taskTitle\",\n      children: task.title\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"hr\", {\n      className: \"titleLineBreaks\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 81,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(TaskInfo, {\n      task: task\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 82,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 76,\n    columnNumber: 9\n  }, this);\n});\n_c5 = TaskCard;\n\nfunction UserColumn({\n  userTasks,\n  userName,\n  editClickHandle,\n  userId\n}) {\n  _s();\n\n  const editClick = useCallback(task => editClickHandle(task), []);\n  return /*#__PURE__*/_jsxDEV(\"section\", {\n    className: \"board-list\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"tasksAdd\",\n      onClick: () => editClick({\n        assignee: userId,\n        imageUrl: \"assets/default.png\",\n        status: 0\n      }),\n      children: /*#__PURE__*/_jsxDEV(\"i\", {\n        className: \"fa fa-plus-circle\",\n        \"aria-hidden\": \"true\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 94,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 93,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"list-title\",\n      children: userName\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 96,\n      columnNumber: 13\n    }, this), userTasks.map(task => /*#__PURE__*/_jsxDEV(TaskCard, {\n      task: task,\n      editClick: editClick\n    }, task.taskId, false, {\n      fileName: _jsxFileName,\n      lineNumber: 99,\n      columnNumber: 36\n    }, this))]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 92,\n    columnNumber: 9\n  }, this);\n}\n\n_s(UserColumn, \"ELWUvXRNtJoLy9PzdN3fO4MJ+As=\");\n\n_c6 = UserColumn;\n\nfunction StagesDisplay({\n  stages,\n  closeStage\n}) {\n  let stageArray = [];\n\n  for (let stage in stages) {\n    stageArray.push(stage);\n  }\n\n  function handleChange(e) {\n    if (e.target.value == \"on\") {\n      stages[e.target.dataset.stagename] = true;\n    } else {\n      stages[e.target.dataset.stagename] = false;\n    }\n  }\n\n  function closeStageCallback(e) {\n    closeStage(e.target.dataset.stagename);\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"ul\", {\n    className: \"stagesList\",\n    children: stageArray.map(function (stage, index) {\n      return /*#__PURE__*/_jsxDEV(\"li\", {\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"checkbox\",\n          defaultChecked: stages[stage],\n          onChange: handleChange,\n          \"data-stagename\": stage\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 128,\n          columnNumber: 41\n        }, this), ` ${stage}`, /*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"stageCloseButton\",\n          onClick: closeStageCallback,\n          \"data-stagename\": stage,\n          children: \" \\u274c\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 129,\n          columnNumber: 17\n        }, this)]\n      }, index, true, {\n        fileName: _jsxFileName,\n        lineNumber: 128,\n        columnNumber: 25\n      }, this);\n    })\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 126,\n    columnNumber: 9\n  }, this);\n}\n\n_c7 = StagesDisplay;\n\nfunction TaskImageurl({\n  image,\n  handleImageChange\n}) {\n  _s2();\n\n  const [taskImage, setTaskImage] = useState(image);\n\n  function handleChange(e) {\n    let uploadUrl = e.target.value;\n    uploadUrl = uploadUrl.slice(12);\n    uploadUrl = 'assets/' + uploadUrl;\n    setTaskImage(uploadUrl);\n    handleImageChange(uploadUrl);\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"taskImageOverlay\",\n    children: [/*#__PURE__*/_jsxDEV(\"label\", {\n      htmlFor: \"task-image-input\",\n      children: /*#__PURE__*/_jsxDEV(\"img\", {\n        src: taskImage,\n        height: \"160px\",\n        width: \"252px\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 151,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 150,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      onChange: handleChange,\n      type: \"file\",\n      id: \"task-image-input\",\n      accept: \"image/*\",\n      style: {\n        display: 'none'\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 153,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 149,\n    columnNumber: 9\n  }, this);\n}\n\n_s2(TaskImageurl, \"WYXASL9Sl6+WErwwTwWHTLcvBJ0=\");\n\n_c8 = TaskImageurl;\n\nfunction TaskTitle({\n  title,\n  handleTitleChange\n}) {\n  _s3();\n\n  const [taskTitle, setTaskTitle] = useState(title);\n\n  function handleChange(e) {\n    setTaskTitle(e.target.value);\n    handleTitleChange(e.target.value);\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"taskTitleOverlay\",\n    children: [/*#__PURE__*/_jsxDEV(\"label\", {\n      htmlFor: \"taskTitleInput\",\n      children: [/*#__PURE__*/_jsxDEV(\"i\", {\n        className: \"fa fa-pencil-square-o\",\n        \"aria-hidden\": \"true\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 168,\n        columnNumber: 45\n      }, this), \" Title :- \"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 168,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      value: taskTitle,\n      onChange: handleChange,\n      type: \"text\",\n      id: \"taskTitleInput\",\n      name: \"taskTitleInput\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 169,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 167,\n    columnNumber: 9\n  }, this);\n}\n\n_s3(TaskTitle, \"GKmMsydEAL/+v0Ftki4pOcGv2Ag=\");\n\n_c9 = TaskTitle;\n\nfunction TaskAssignee({\n  users,\n  assignee,\n  handleAssigneeChange\n}) {\n  _s4();\n\n  const [taskAssignee, setTaskAssignee] = useState(assignee);\n\n  function handleChange(e) {\n    setTaskAssignee(e.target.value);\n    handleAssigneeChange(e.target.value);\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"taskUserOverlay\",\n    children: [/*#__PURE__*/_jsxDEV(\"label\", {\n      htmlFor: \"taskUserInput\",\n      children: [/*#__PURE__*/_jsxDEV(\"i\", {\n        className: \"fa fa-user-circle-o\",\n        \"aria-hidden\": \"true\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 185,\n        columnNumber: 44\n      }, this), \" Assigee :- \"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 185,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n      id: \"taskUserInput\",\n      value: taskAssignee,\n      onChange: handleChange,\n      children: users.map(function (user) {\n        return /*#__PURE__*/_jsxDEV(\"option\", {\n          value: user.name,\n          children: user.name\n        }, user.id, false, {\n          fileName: _jsxFileName,\n          lineNumber: 188,\n          columnNumber: 29\n        }, this);\n      })\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 186,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 184,\n    columnNumber: 9\n  }, this);\n}\n\n_s4(TaskAssignee, \"Noq2dFCWJ0Bq9f3zDpwGqGftvQc=\");\n\n_c10 = TaskAssignee;\n\nfunction TaskStatus({\n  status,\n  handleStatusChange\n}) {\n  _s5();\n\n  const [taskStatus, setTaskStatus] = useState(status);\n\n  function handleChange(e) {\n    setTaskStatus(e.target.value);\n    handleStatusChange(e.target.value);\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"taskStatusOverlay\",\n    children: [/*#__PURE__*/_jsxDEV(\"label\", {\n      htmlFor: \"taskSatusInput\",\n      children: [/*#__PURE__*/_jsxDEV(\"i\", {\n        className: \"fa fa-arrow-circle-right\",\n        \"aria-hidden\": \"true\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 205,\n        columnNumber: 45\n      }, this), ` Status :-`]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 205,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n      id: \"taskStatusInput\",\n      value: taskStatus,\n      onChange: handleChange,\n      children: [/*#__PURE__*/_jsxDEV(\"option\", {\n        value: \"Not started\",\n        children: \"Not started\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 208,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n        value: \"In-progress\",\n        children: \"In-progress\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 209,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n        value: \"On hold\",\n        children: \"On hold\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 210,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n        value: \"Completed\",\n        children: \"Completed\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 211,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 207,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 204,\n    columnNumber: 9\n  }, this);\n}\n\n_s5(TaskStatus, \"UEbAuVIqZ2ioBpJHDB5NWiIU3p0=\");\n\n_c11 = TaskStatus;\n\nfunction TaskDate({\n  date,\n  handleDateChange\n}) {\n  _s6();\n\n  const [taskDate, setTaskDate] = useState(date);\n\n  function handleChange(e) {\n    setTaskDate(e.target.value);\n    handleDateChange(e.target.value);\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"taskDateOverlay\",\n    children: [/*#__PURE__*/_jsxDEV(\"label\", {\n      htmlFor: \"taskDateInput\",\n      children: [/*#__PURE__*/_jsxDEV(\"i\", {\n        className: \"fa fa-clock-o\",\n        \"aria-hidden\": \"true\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 228,\n        columnNumber: 44\n      }, this), \" Due date :- \"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 228,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      value: taskDate,\n      onChange: handleChange,\n      type: \"date\",\n      id: \"taskDateInput\",\n      name: \"taskDateInput\",\n      placeholder: \"dd/mm/yyyy\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 229,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 227,\n    columnNumber: 9\n  }, this);\n}\n\n_s6(TaskDate, \"fCKJ3HejksiD/mgU0Vps96gspB4=\");\n\n_c12 = TaskDate;\n\nfunction TaskOverlay({\n  task,\n  users,\n  handleClose,\n  handleSave,\n  handleDelete\n}) {\n  _s7();\n\n  let selectedIndex = useMemo(() => users.findIndex(user => user.id == task.assignee), [task]);\n  let taskImage = task.imageUrl || \"assets/default.png\";\n\n  function handleImageChange(imageUrl) {\n    taskImage = imageUrl;\n  }\n\n  let taskTitle = task.title || \"\";\n\n  function handleTitleChange(title) {\n    taskTitle = title;\n  }\n\n  let taskAssignee = users[selectedIndex].name;\n\n  function handleAssigneeChange(assignee) {\n    taskAssignee = assignee;\n  }\n\n  let taskStatus = statusMapping[task.status];\n\n  function handleStatusChange(status) {\n    taskStatus = status;\n  }\n\n  let taskDate = task.dueDate || \"\";\n\n  function handleDateChange(date) {\n    taskDate = date;\n  }\n\n  const [taskStages, setTaskstages] = useState(task.stages);\n\n  function deleteStageHandle(stageName) {\n    let newStages = {};\n\n    for (let stage in taskStages) {\n      newStages[stage] = taskStages[stage];\n    }\n\n    delete newStages[stageName];\n    setTaskstages(newStages);\n  }\n\n  function addStageHandle() {\n    let stageName = prompt(\"Enter stage name:- \", \"\");\n\n    if (stageName == \"\" || stageName == null) {\n      return;\n    }\n\n    let newStages = {};\n\n    for (let stage in taskStages) {\n      newStages[stage] = taskStages[stage];\n    }\n\n    newStages[stageName] = false;\n    setTaskstages(newStages);\n  }\n\n  function closeCallback() {\n    handleClose();\n  }\n\n  function saveCallBack() {\n    let currentAssigneeIndex = users.findIndex(user => user.name == taskAssignee);\n    let newTask = {};\n\n    if (isNaN(task.taskId)) {\n      newTask.taskId = -1;\n    } else {\n      newTask.taskId = task.taskId;\n    }\n\n    newTask.imageUrl = taskImage;\n    newTask.title = taskTitle;\n    newTask.assignee = users[currentAssigneeIndex].id;\n    newTask.status = mapStatus[taskStatus];\n    newTask.stages = {};\n\n    for (let stage in taskStages) {\n      newTask.stages[stage] = taskStages[stage];\n    }\n\n    newTask.dueDate = taskDate;\n    handleSave(newTask);\n  }\n\n  function deleteCallBack() {\n    if (isNaN(task.taskId)) {\n      closeCallback();\n    } else {\n      let ind = users[selectedIndex].tasks.findIndex(taskId => taskId == task.taskId);\n      users[selectedIndex].tasks.splice(ind, 1);\n      handleDelete(task.taskId);\n    }\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"tasksOverlayContainer\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"tasksOverlay\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"closeButton\",\n        onClick: closeCallback,\n        children: \"X\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 329,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(TaskImageurl, {\n        image: taskImage,\n        handleImageChange: handleImageChange\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 333,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(TaskTitle, {\n        title: taskTitle,\n        handleTitleChange: handleTitleChange\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 334,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(TaskAssignee, {\n        users: users,\n        assignee: taskAssignee,\n        handleAssigneeChange: handleAssigneeChange\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 335,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"taskStagesOverlay\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          children: [/*#__PURE__*/_jsxDEV(\"i\", {\n            className: \"fa fa-check-square-o\",\n            \"aria-hidden\": \"true\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 337,\n            columnNumber: 28\n          }, this), \" Stages :- \"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 337,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(StagesDisplay, {\n          stages: taskStages,\n          closeStage: deleteStageHandle\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 338,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"addStageButton\",\n          onClick: addStageHandle,\n          children: [/*#__PURE__*/_jsxDEV(\"i\", {\n            className: \"fa fa-plus\",\n            \"aria-hidden\": \"true\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 340,\n            columnNumber: 25\n          }, this), \" Add Stage\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 339,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 336,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(TaskStatus, {\n        status: taskStatus,\n        handleStatusChange: handleStatusChange\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 344,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(TaskDate, {\n        date: taskDate,\n        handleDateChange: handleDateChange\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 345,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"overlayButtons\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"saveButton\",\n          onClick: saveCallBack,\n          children: [/*#__PURE__*/_jsxDEV(\"i\", {\n            className: \"fa fa-check\",\n            \"aria-hidden\": \"true\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 348,\n            columnNumber: 21\n          }, this), \" SAVE\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 347,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"deleteButton\",\n          onClick: deleteCallBack,\n          children: [/*#__PURE__*/_jsxDEV(\"i\", {\n            className: \"fa fa-times\",\n            \"aria-hidden\": \"true\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 351,\n            columnNumber: 21\n          }, this), \" DELETE CARD\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 350,\n          columnNumber: 17\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 346,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 328,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 327,\n    columnNumber: 9\n  }, this);\n}\n\n_s7(TaskOverlay, \"vO21iGsW3Tij2DmSo4ZHPajJmgk=\");\n\n_c13 = TaskOverlay;\n\nfunction TasksContainer() {\n  _s8();\n\n  const tasks = useSelector(state => state.tasks);\n  const users = useSelector(state => state.users);\n  const dispatch = useDispatch();\n  const [overlay, setOverlay] = useState(null);\n\n  function editClickHandle(task) {\n    setOverlay(task);\n  }\n\n  function handleClose() {\n    setOverlay(null);\n  }\n\n  function handleSave(newTask) {\n    if (newTask.taskId == -1) {\n      newTask.taskId = tasks[tasks.length - 1].taskId + 1;\n      dispatch(actions.addTask(newTask));\n    } else {\n      dispatch(actions.updateTask(newTask.taskId, newTask));\n    }\n\n    taskMap.set(newTask.taskId, newTask);\n    setOverlay(null);\n  }\n\n  function handleDelete(id) {\n    dispatch(actions.removeTask(id));\n    setOverlay(null);\n  }\n\n  let taskMap = new Map();\n  tasks.forEach(element => {\n    taskMap.set(element.taskId, element);\n  });\n\n  if (overlay == null) {\n    return /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"board-lists\",\n        children: users.map(function (user) {\n          let userTasks = [];\n          user.tasks.forEach(id => userTasks.push(taskMap.get(id)));\n          return /*#__PURE__*/_jsxDEV(UserColumn, {\n            userTasks: userTasks,\n            userName: user.name,\n            editClickHandle: editClickHandle,\n            userId: user.id\n          }, user.id, false, {\n            fileName: _jsxFileName,\n            lineNumber: 404,\n            columnNumber: 36\n          }, this);\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 400,\n        columnNumber: 21\n      }, this)\n    }, void 0, false);\n  } else {\n    return /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"board-lists\",\n        children: users.map(function (user) {\n          let userTasks = [];\n          user.tasks.forEach(id => userTasks.push(taskMap.get(id)));\n          return /*#__PURE__*/_jsxDEV(UserColumn, {\n            userTasks: userTasks,\n            userName: user.name,\n            editClickHandle: editClickHandle\n          }, user.id, false, {\n            fileName: _jsxFileName,\n            lineNumber: 418,\n            columnNumber: 32\n          }, this);\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 414,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(TaskOverlay, {\n        task: overlay,\n        users: users,\n        handleClose: handleClose,\n        handleSave: handleSave,\n        handleDelete: handleDelete\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 421,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true);\n  }\n}\n\n_s8(TasksContainer, \"KzQRyLwYytCrQdBFjDGHSN48UyA=\", false, function () {\n  return [useSelector, useSelector, useDispatch];\n});\n\n_c14 = TasksContainer;\n\nfunction Tasks(props) {\n  return /*#__PURE__*/_jsxDEV(\"section\", {\n    className: \"board\",\n    children: /*#__PURE__*/_jsxDEV(TasksContainer, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 431,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 430,\n    columnNumber: 9\n  }, this);\n}\n\n_c15 = Tasks;\nexport default Tasks;\n\nvar _c, _c2, _c3, _c4, _c5, _c6, _c7, _c8, _c9, _c10, _c11, _c12, _c13, _c14, _c15;\n\n$RefreshReg$(_c, \"TaskInfo\");\n$RefreshReg$(_c2, \"TaskImage$React.memo\");\n$RefreshReg$(_c3, \"TaskImage\");\n$RefreshReg$(_c4, \"TaskCard$React.memo\");\n$RefreshReg$(_c5, \"TaskCard\");\n$RefreshReg$(_c6, \"UserColumn\");\n$RefreshReg$(_c7, \"StagesDisplay\");\n$RefreshReg$(_c8, \"TaskImageurl\");\n$RefreshReg$(_c9, \"TaskTitle\");\n$RefreshReg$(_c10, \"TaskAssignee\");\n$RefreshReg$(_c11, \"TaskStatus\");\n$RefreshReg$(_c12, \"TaskDate\");\n$RefreshReg$(_c13, \"TaskOverlay\");\n$RefreshReg$(_c14, \"TasksContainer\");\n$RefreshReg$(_c15, \"Tasks\");","map":{"version":3,"sources":["/Users/dhruvpatel/Desktop/poject-redux/src/Tasks.js"],"names":["faUserInjured","React","useMemo","ReactDOM","useDispatch","useSelector","useCallback","useState","actions","statusMapping","monthMapping","statusColorMapping","mapStatus","getDateString","date","dateString","slice","getStageString","stages","totalStages","completedStages","prop","stagesString","TaskInfo","task","color","status","dueDate","TaskImage","memo","src","TaskCard","editClick","editCallback","imageUrl","title","UserColumn","userTasks","userName","editClickHandle","userId","assignee","map","taskId","StagesDisplay","closeStage","stageArray","stage","push","handleChange","e","target","value","dataset","stagename","closeStageCallback","index","TaskImageurl","image","handleImageChange","taskImage","setTaskImage","uploadUrl","display","TaskTitle","handleTitleChange","taskTitle","setTaskTitle","TaskAssignee","users","handleAssigneeChange","taskAssignee","setTaskAssignee","user","name","id","TaskStatus","handleStatusChange","taskStatus","setTaskStatus","TaskDate","handleDateChange","taskDate","setTaskDate","TaskOverlay","handleClose","handleSave","handleDelete","selectedIndex","findIndex","taskStages","setTaskstages","deleteStageHandle","stageName","newStages","addStageHandle","prompt","closeCallback","saveCallBack","currentAssigneeIndex","newTask","isNaN","deleteCallBack","ind","tasks","splice","TasksContainer","state","dispatch","overlay","setOverlay","length","addTask","updateTask","taskMap","set","removeTask","Map","forEach","element","get","Tasks","props"],"mappings":"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","sourcesContent":["import { faUserInjured } from '@fortawesome/free-solid-svg-icons';\nimport React from 'react';\nimport { useMemo } from 'react';\nimport ReactDOM from 'react-dom';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { useCallback, useState } from 'react/cjs/react.development';\nimport actions from './store/actions'\n\nlet statusMapping = [\"Not started\" , \"In-progress\" , \"On hold\" , \"Completed\"];\nlet monthMapping = [\"Jan\" , \"Feb\" , \"Mar\" , \"Apr\" , \"May\" , \"Jun\" , \"Jul\" , \"Aug\" , \"Sep\" , \"Oct\" , \"Nov\", \"Dec\"];\nlet statusColorMapping = [\"yellow\" , \"purple\" , \"red\" , \"chartreuse\"];\nlet mapStatus = {\n    \"Not started\" : 0,\n    \"In-progress\" : 1,\n    \"On hold\" : 2,\n    \"Completed\" : 3,\n}\n\n\nfunction getDateString(date) {\n    let dateString = \" \";\n    dateString+=date.slice(8,10);\n    dateString+=\" \";\n    dateString+=monthMapping[+date.slice(5,7)-1];\n    dateString+=\",\";\n    dateString+=date.slice(0,4);\n    return dateString;\n}\n\nfunction getStageString(stages) {\n    let totalStages = 0;\n    let completedStages = 0;\n    for(let prop in stages)\n    {\n        totalStages++;\n        if(stages[prop])\n        {\n            completedStages++;\n        }\n    }\n    let stagesString = \" \" + completedStages + \"/\" + totalStages;\n    return stagesString;\n}\n\nfunction TaskInfo({task}) {\n    return(\n        <div className=\"taskInfo\">\n            <span className=\"taskStatus\">\n                <i className=\"fa fa-square taskStatusSymbol\" aria-hidden=\"true\" style={{color : statusColorMapping[task.status]}}></i> {statusMapping[task.status]}\n            </span>\n            <span className=\"taskDue\">\n                <i className=\"fa fa-clock-o\" aria-hidden=\"true\"></i> {getDateString(task.dueDate)}\n            </span>\n            <span>\n                <i className=\"fa fa-check-square-o\" aria-hidden=\"true\"></i> {getStageString(task.stages)}\n            </span>\n        </div>\n    );\n}\n\nconst TaskImage = React.memo(function({src}) {\n    return (\n        <div className=\"taskImage\">\n            <img src = {src} height=\"160px\" width=\"252px\"/>\n        </div>\n    );\n})\n\nconst TaskCard = React.memo(function({task,editClick}) {\n\n    function editCallback() {\n        editClick(task);\n    }\n\n    return (\n        <div className=\"card\" onClick={editCallback}>\n            <TaskImage src={task.imageUrl} />\n            <div className=\"taskTitle\">\n                {task.title}\n            </div>\n            <hr className=\"titleLineBreaks\" />\n            <TaskInfo task={task} />\n        </div>\n    )\n});\n\nfunction UserColumn({userTasks,userName,editClickHandle,userId}) {\n\n    const editClick = useCallback((task) => editClickHandle(task),[]);\n\n    return (\n        <section className=\"board-list\">\n            <div className=\"tasksAdd\" onClick={() => editClick({assignee: userId,imageUrl: \"assets/default.png\",status:0})}>\n                <i className=\"fa fa-plus-circle\" aria-hidden=\"true\"></i>\n            </div>\n            <div className=\"list-title\">\n                {userName}\n            </div>\n            {userTasks.map(task => <TaskCard task={task} key={task.taskId} editClick={editClick}/>)}\n        </section>\n    );\n}\n\nfunction StagesDisplay({stages,closeStage}) {\n    let stageArray = [];\n    for(let stage in stages) {\n        stageArray.push(stage);\n    }\n\n    function handleChange(e) {\n        if(e.target.value == \"on\")\n        {\n            stages[e.target.dataset.stagename] = true;\n        }\n        else\n        {\n            stages[e.target.dataset.stagename] = false;\n        }\n    }\n\n    function closeStageCallback(e) {\n        closeStage(e.target.dataset.stagename);\n    }\n\n    return (\n        <ul className=\"stagesList\"> \n            {stageArray.map(function(stage,index){\n                return (<li key={index}><input type=\"checkbox\" defaultChecked={stages[stage]} onChange={handleChange} data-stagename={stage}/>{` ${stage}`}\n                <span className=\"stageCloseButton\" onClick={closeStageCallback} data-stagename={stage}>{\" \\u274c\"}</span> \n                </li>);\n            }   )}\n        </ul>\n    );\n}\n\nfunction TaskImageurl({image,handleImageChange}) {\n\n    const [taskImage,setTaskImage] = useState(image);\n\n    function handleChange(e) {\n        let uploadUrl = e.target.value;\n        uploadUrl = uploadUrl.slice(12);\n        uploadUrl = 'assets/' + uploadUrl;\n        setTaskImage(uploadUrl);\n        handleImageChange(uploadUrl);\n    }\n\n    return (\n        <div className=\"taskImageOverlay\">\n            <label htmlFor=\"task-image-input\">\n                <img src = {taskImage} height=\"160px\" width=\"252px\" />\n            </label>\n            <input onChange={handleChange} type=\"file\" id=\"task-image-input\" accept=\"image/*\" style={{display:'none'}} />\n        </div> \n    )\n}\n\nfunction TaskTitle({title,handleTitleChange}) {\n    const [taskTitle,setTaskTitle] = useState(title);\n\n    function handleChange(e) {\n        setTaskTitle(e.target.value);\n        handleTitleChange(e.target.value);\n    }\n\n    return (\n        <div className=\"taskTitleOverlay\">\n            <label htmlFor=\"taskTitleInput\"><i className=\"fa fa-pencil-square-o\" aria-hidden=\"true\"></i> Title :- </label>\n            <input value={taskTitle} onChange={handleChange} type=\"text\" id=\"taskTitleInput\" name=\"taskTitleInput\" />  \n        </div>\n    )\n}\n\nfunction TaskAssignee({users,assignee,handleAssigneeChange}) {\n\n    const [taskAssignee,setTaskAssignee] = useState(assignee);\n\n    function handleChange(e) {\n        setTaskAssignee(e.target.value);\n        handleAssigneeChange(e.target.value);\n    }\n\n    return (\n        <div className=\"taskUserOverlay\">\n            <label htmlFor=\"taskUserInput\"><i className=\"fa fa-user-circle-o\" aria-hidden=\"true\"></i> Assigee :- </label>\n            <select id=\"taskUserInput\" value={taskAssignee} onChange={handleChange}>\n                {users.map(function(user) {\n                    return (<option value={user.name} key={user.id}>{user.name}</option>);\n                })}\n            </select>  \n        </div>\n    )\n}\n\nfunction TaskStatus({status,handleStatusChange}) {\n\n    const [taskStatus,setTaskStatus] = useState(status);\n\n    function handleChange(e) {\n        setTaskStatus(e.target.value);\n        handleStatusChange(e.target.value);\n    }\n    return (\n        <div className=\"taskStatusOverlay\">\n            <label htmlFor=\"taskSatusInput\"><i className=\"fa fa-arrow-circle-right\" aria-hidden=\"true\"></i>\n                {` Status :-`}</label>\n            <select id=\"taskStatusInput\" value={taskStatus} onChange={handleChange}>\n                <option value=\"Not started\">Not started</option>\n                <option value=\"In-progress\">In-progress</option>\n                <option value=\"On hold\">On hold</option>\n                <option value=\"Completed\">Completed</option>\n            </select>\n        </div>\n    );\n\n}\n\nfunction TaskDate({date,handleDateChange}) {\n    const [taskDate,setTaskDate] = useState(date);\n\n    function handleChange(e) {\n        setTaskDate(e.target.value);\n        handleDateChange(e.target.value);\n    }\n\n    return (\n        <div className=\"taskDateOverlay\">\n            <label htmlFor=\"taskDateInput\"><i className=\"fa fa-clock-o\" aria-hidden=\"true\"></i> Due date :- </label>\n            <input value={taskDate} onChange={handleChange} type=\"date\" id=\"taskDateInput\" name=\"taskDateInput\" placeholder=\"dd/mm/yyyy\" />  \n        </div>\n    )\n}\n\n\nfunction TaskOverlay({task,users,handleClose,handleSave,handleDelete}) {\n\n    let selectedIndex = useMemo(() => users.findIndex((user) => user.id == task.assignee),[task]);\n    \n    let taskImage = task.imageUrl || \"assets/default.png\";\n    function handleImageChange(imageUrl) {\n        taskImage = imageUrl;\n    }\n\n    let taskTitle = task.title || \"\";\n    function handleTitleChange(title) {\n        taskTitle = title;\n    }\n\n    let taskAssignee = users[selectedIndex].name;\n    function handleAssigneeChange(assignee) {\n        taskAssignee = assignee;\n    }\n\n    let taskStatus = statusMapping[task.status];\n    function handleStatusChange(status) {\n        taskStatus = status;\n    }\n\n    let taskDate = task.dueDate || \"\";\n    function handleDateChange(date) {\n        taskDate = date;\n    }\n\n    const [taskStages,setTaskstages] = useState(task.stages);\n\n    function deleteStageHandle(stageName) {\n        let newStages = {};\n        for(let stage in taskStages) {\n            newStages[stage] = taskStages[stage];\n        }\n        delete newStages[stageName];\n        setTaskstages(newStages);\n    }\n\n    function addStageHandle() {\n        let stageName = prompt(\"Enter stage name:- \",\"\");\n        if(stageName==\"\" || stageName == null)\n        {\n            return;\n        }\n        let newStages = {};\n        for(let stage in taskStages) {\n            newStages[stage] = taskStages[stage];\n        }\n        newStages[stageName] = false;\n        setTaskstages(newStages);\n    }\n\n    function closeCallback () {\n        handleClose();\n    }\n\n    function saveCallBack() {\n        let currentAssigneeIndex = users.findIndex((user) => user.name == taskAssignee);\n        let newTask = {};\n        if(isNaN(task.taskId)) {\n            newTask.taskId = -1;\n        }\n        else {\n            newTask.taskId = task.taskId;\n        }\n        newTask.imageUrl = taskImage;\n        newTask.title = taskTitle;\n        newTask.assignee = users[currentAssigneeIndex].id;\n        newTask.status = mapStatus[taskStatus];\n        newTask.stages = {};\n        for(let stage in taskStages) {\n            newTask.stages[stage] = taskStages[stage];\n        }\n        newTask.dueDate = taskDate;\n        handleSave(newTask);\n    }\n\n    function deleteCallBack() {\n        if(isNaN(task.taskId)) {\n            closeCallback();\n        }\n        else {\n            let ind = users[selectedIndex].tasks.findIndex((taskId) => taskId == task.taskId);\n            users[selectedIndex].tasks.splice(ind,1);\n            handleDelete(task.taskId);\n        }\n    }\n\n\n    return (\n        <div className=\"tasksOverlayContainer\">\n            <div className=\"tasksOverlay\">\n                <div className=\"closeButton\" onClick={closeCallback}>\n                X\n                </div>\n\n                <TaskImageurl image={taskImage} handleImageChange={handleImageChange} />\n                <TaskTitle title={taskTitle} handleTitleChange={handleTitleChange} />\n                <TaskAssignee users={users} assignee={taskAssignee} handleAssigneeChange={handleAssigneeChange} />\n                <div className=\"taskStagesOverlay\">\n                    <label><i className=\"fa fa-check-square-o\" aria-hidden=\"true\"></i> Stages :- </label>\n                    <StagesDisplay stages={taskStages} closeStage={deleteStageHandle}/>\n                    <div className=\"addStageButton\" onClick={addStageHandle}>\n                        <i className=\"fa fa-plus\" aria-hidden=\"true\"></i> Add Stage\n                    </div>\n                </div>\n\n                <TaskStatus status={taskStatus} handleStatusChange={handleStatusChange} />\n                <TaskDate date={taskDate} handleDateChange={handleDateChange} />\n                <div className=\"overlayButtons\">\n                <div className=\"saveButton\" onClick={saveCallBack}>\n                    <i className=\"fa fa-check\" aria-hidden=\"true\"></i> SAVE\n                </div>\n                <div className=\"deleteButton\" onClick={deleteCallBack}>\n                    <i className=\"fa fa-times\" aria-hidden=\"true\"></i> DELETE CARD\n                </div>\n                </div>\n            </div>\n        </div>\n    );\n}\n\nfunction TasksContainer() {\n\n    const tasks = useSelector(state => state.tasks);\n    const users = useSelector(state => state.users);\n    const dispatch = useDispatch();\n\n    const [overlay,setOverlay] = useState(null);\n\n    function editClickHandle(task) {\n        setOverlay(task);\n    }\n\n    function handleClose() {\n        setOverlay(null);\n    }\n\n    function handleSave(newTask) {\n        if(newTask.taskId == -1) {\n            newTask.taskId = tasks[tasks.length-1].taskId+1;\n            dispatch(actions.addTask(newTask));\n        }\n        else {\n            dispatch(actions.updateTask(newTask.taskId,newTask));\n        }\n        taskMap.set(newTask.taskId,newTask);\n        setOverlay(null);\n    }\n    \n    function handleDelete(id) {\n        dispatch(actions.removeTask(id));\n        setOverlay(null);\n    }\n\n    let taskMap = new Map();\n    tasks.forEach(element => {\n        taskMap.set(element.taskId,element);\n    });\n\n    if(overlay == null) {\n        return(\n                <>\n                    <div className=\"board-lists\">\n                        {users.map(function (user) {\n                            let userTasks = [];\n                            user.tasks.forEach(id => userTasks.push(taskMap.get(id)));\n                            return <UserColumn userTasks={userTasks} key={user.id} userName={user.name} editClickHandle={editClickHandle} userId={user.id}/>\n                        })}\n                    </div> \n                </>\n            )\n    }\n\n    else {\n        return(\n            <>\n                <div className=\"board-lists\">\n                    {users.map(function (user) {\n                        let userTasks = [];\n                        user.tasks.forEach(id => userTasks.push(taskMap.get(id)));\n                        return <UserColumn userTasks={userTasks} key={user.id} userName={user.name} editClickHandle={editClickHandle}/>\n                    })}\n                </div> \n                <TaskOverlay task={overlay} users={users} handleClose={handleClose} handleSave={handleSave} handleDelete={handleDelete}/>\n            </>\n        )\n    }\n}\n\n\nfunction Tasks(props) {\n    return (\n        <section className=\"board\">\n            <TasksContainer />\n        </section>\n    )\n}\n\nexport default Tasks;"]},"metadata":{},"sourceType":"module"}