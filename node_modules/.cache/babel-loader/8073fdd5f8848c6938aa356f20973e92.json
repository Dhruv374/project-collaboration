{"ast":null,"code":"var _jsxFileName = \"/Users/dhruvpatel/Desktop/project-react/src/Tasks.js\",\n    _s = $RefreshSig$(),\n    _s2 = $RefreshSig$(),\n    _s3 = $RefreshSig$();\n\nimport { faUserInjured } from '@fortawesome/free-solid-svg-icons';\nimport React from 'react';\nimport { useMemo } from 'react';\nimport ReactDOM from 'react-dom';\nimport { useCallback, useState } from 'react/cjs/react.development';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nlet statusMapping = [\"Not started\", \"In-progress\", \"On hold\", \"Completed\"];\nlet monthMapping = [\"Jan\", \"Feb\", \"Mar\", \"Apr\", \"May\", \"Jun\", \"Jul\", \"Aug\", \"Sep\", \"Oct\", \"Nov\", \"Dec\"];\nlet statusColorMapping = [\"yellow\", \"purple\", \"red\", \"chartreuse\"];\nlet mapStatus = {\n  \"Not started\": 0,\n  \"In-progress\": 1,\n  \"On hold\": 2,\n  \"Completed\": 3\n};\n\nfunction getDateString(date) {\n  let dateString = \" \";\n  dateString += date.slice(8, 10);\n  dateString += \" \";\n  dateString += monthMapping[+date.slice(5, 7) - 1];\n  dateString += \",\";\n  dateString += date.slice(0, 4);\n  return dateString;\n}\n\nfunction getStageString(stages) {\n  let totalStages = 0;\n  let completedStages = 0;\n\n  for (let prop in stages) {\n    totalStages++;\n\n    if (stages[prop]) {\n      completedStages++;\n    }\n  }\n\n  let stagesString = \" \" + completedStages + \"/\" + totalStages;\n  return stagesString;\n}\n\nfunction TaskInfo({\n  task\n}) {\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"taskInfo\",\n    children: [/*#__PURE__*/_jsxDEV(\"span\", {\n      className: \"taskStatus\",\n      children: [/*#__PURE__*/_jsxDEV(\"i\", {\n        className: \"fa fa-square taskStatusSymbol\",\n        \"aria-hidden\": \"true\",\n        style: {\n          color: statusColorMapping[task.status]\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 17\n      }, this), \" \", statusMapping[task.status]]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n      className: \"taskDue\",\n      children: [/*#__PURE__*/_jsxDEV(\"i\", {\n        className: \"fa fa-clock-o\",\n        \"aria-hidden\": \"true\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 17\n      }, this), \" \", getDateString(task.dueDate)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n      children: [/*#__PURE__*/_jsxDEV(\"i\", {\n        className: \"fa fa-check-square-o\",\n        \"aria-hidden\": \"true\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 17\n      }, this), \" \", getStageString(task.stages)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 45,\n    columnNumber: 9\n  }, this);\n}\n\n_c = TaskInfo;\nconst TaskImage = /*#__PURE__*/React.memo(_c2 = function ({\n  src\n}) {\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"taskImage\",\n    children: /*#__PURE__*/_jsxDEV(\"img\", {\n      src: src,\n      height: \"160px\",\n      width: \"252px\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 61,\n    columnNumber: 9\n  }, this);\n});\n_c3 = TaskImage;\nconst TaskCard = /*#__PURE__*/React.memo(_c4 = function ({\n  task,\n  editClick\n}) {\n  function editCallback() {\n    editClick(task);\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"card\",\n    onClick: editCallback,\n    children: [/*#__PURE__*/_jsxDEV(TaskImage, {\n      src: task.imageUrl\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"taskTitle\",\n      children: task.title\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"hr\", {\n      className: \"titleLineBreaks\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(TaskInfo, {\n      task: task\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 74,\n    columnNumber: 9\n  }, this);\n});\n_c5 = TaskCard;\n\nfunction UserColumn({\n  userTasks,\n  userName,\n  editClickHandle,\n  userId\n}) {\n  _s();\n\n  const editClick = useCallback(() => editClickHandle(task), []);\n  return /*#__PURE__*/_jsxDEV(\"section\", {\n    className: \"board-list\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"tasksAdd\",\n      onClick: () => editClick({\n        assignee: userId,\n        imageUrl: \"assets/default.png\"\n      }),\n      children: /*#__PURE__*/_jsxDEV(\"i\", {\n        className: \"fa fa-plus-circle\",\n        \"aria-hidden\": \"true\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 92,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 91,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"list-title\",\n      children: userName\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 94,\n      columnNumber: 13\n    }, this), userTasks.map(task => /*#__PURE__*/_jsxDEV(TaskCard, {\n      task: task,\n      editClick: editClick\n    }, task.taskId, false, {\n      fileName: _jsxFileName,\n      lineNumber: 97,\n      columnNumber: 36\n    }, this))]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 90,\n    columnNumber: 9\n  }, this);\n}\n\n_s(UserColumn, \"ELWUvXRNtJoLy9PzdN3fO4MJ+As=\");\n\n_c6 = UserColumn;\n\nfunction StagesDisplay({\n  stages,\n  closeStage\n}) {\n  let stageArray = [];\n\n  for (let stage in stages) {\n    stageArray.push(stage);\n  }\n\n  function handleChange(e) {\n    if (e.target.value == \"on\") {\n      stages[e.target.dataset.stagename] = true;\n    } else {\n      stages[e.target.dataset.stagename] = false;\n    }\n  }\n\n  function closeStageCallback(e) {\n    closeStage(e.target.dataset.stagename);\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"ul\", {\n    className: \"stagesList\",\n    children: stageArray.map(function (stage, index) {\n      return /*#__PURE__*/_jsxDEV(\"li\", {\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"checkbox\",\n          defaultChecked: stages[stage],\n          onChange: handleChange,\n          \"data-stagename\": stage\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 126,\n          columnNumber: 41\n        }, this), ` ${stage}`, /*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"stageCloseButton\",\n          onClick: closeStageCallback,\n          \"data-stagename\": stage,\n          children: \" \\u274c\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 127,\n          columnNumber: 17\n        }, this)]\n      }, index, true, {\n        fileName: _jsxFileName,\n        lineNumber: 126,\n        columnNumber: 25\n      }, this);\n    })\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 124,\n    columnNumber: 9\n  }, this);\n}\n\n_c7 = StagesDisplay;\n\nfunction TaskOverlay({\n  task,\n  users,\n  handleClose,\n  handleSave,\n  handleDelete\n}) {\n  _s2();\n\n  let selectedIndex = useMemo(() => users.findIndex(user => user.id == task.assignee), [task]);\n  const [taskImage, setTaskImage] = useState(task.imageUrl);\n  const [taskTitle, setTaskTitle] = useState(task.title);\n  const [taskAssignee, setTaskAssignee] = useState(users[selectedIndex].name);\n  const [taskStages, setTaskstages] = useState(task.stages);\n  const [taskStatus, setTaskstatus] = useState(statusMapping[task.status]);\n  const [taskDate, setTaskdate] = useState(task.dueDate);\n\n  function deleteStageHandle(stageName) {\n    let newStages = {};\n\n    for (let stage in taskStages) {\n      newStages[stage] = taskStages[stage];\n    }\n\n    delete newStages[stageName];\n    setTaskstages(newStages);\n  }\n\n  function addStageHandle() {\n    let stageName = prompt(\"Enter stage name:- \", \"\");\n\n    if (stageName == \"\" || stageName == null) {\n      return;\n    }\n\n    let newStages = {};\n\n    for (let stage in taskStages) {\n      newStages[stage] = taskStages[stage];\n    }\n\n    newStages[stageName] = false;\n    setTaskstages(newStages);\n  }\n\n  function closeCallback() {\n    handleClose();\n  }\n\n  function saveCallBack() {\n    let currentAssigneeIndex = users.findIndex(user => user.name == taskAssignee);\n    let newTask = {};\n\n    if (isNaN(task.taskId)) {\n      newTask.taskId = -1;\n    } else {\n      newTask.taskId = task.taskId;\n\n      if (selectedIndex != currentAssigneeIndex) {\n        let taskIndex = users[selectedIndex].tasks.findIndex(taskId => taskId == newTask.taskId);\n        users[selectedIndex].tasks.splice(taskIndex, 1);\n        users[currentAssigneeIndex].tasks.push(newTask.taskId);\n      }\n    }\n\n    newTask.imageUrl = taskImage;\n    newTask.title = taskTitle;\n    newTask.assignee = users[currentAssigneeIndex].id;\n    newTask.status = mapStatus[taskStatus];\n    newTask.stages = {};\n\n    for (let stage in taskStages) {\n      newTask.stages[stage] = taskStages[stage];\n    }\n\n    newTask.dueDate = taskDate;\n    handleSave(newTask);\n  }\n\n  function deleteCallBack() {\n    if (isNaN(task.taskId)) {\n      closeCallback();\n    } else {\n      let ind = users[selectedIndex].tasks.findIndex(taskId => taskId == task.taskId);\n      users[selectedIndex].tasks.splice(ind, 1);\n      handleDelete(task.taskId);\n    }\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"tasksOverlayContainer\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"tasksOverlay\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"closeButton\",\n        onClick: closeCallback,\n        children: \"X\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 212,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"taskImageOverlay\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"task-image-input\",\n          children: /*#__PURE__*/_jsxDEV(\"img\", {\n            src: taskImage,\n            height: \"160px\",\n            width: \"252px\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 218,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 217,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"file\",\n          id: \"task-image-input\",\n          accept: \"image/*\",\n          style: {\n            display: 'none'\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 220,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 216,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"taskTitleOverlay\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"taskTitleInput\",\n          children: [/*#__PURE__*/_jsxDEV(\"i\", {\n            className: \"fa fa-pencil-square-o\",\n            \"aria-hidden\": \"true\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 224,\n            columnNumber: 53\n          }, this), \" Title :- \"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 224,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          value: taskTitle,\n          onChange: e => setTaskTitle(e.target.value),\n          type: \"text\",\n          id: \"taskTitleInput\",\n          name: \"taskTitleInput\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 225,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 223,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"taskUserOverlay\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"taskUserInput\",\n          children: [/*#__PURE__*/_jsxDEV(\"i\", {\n            className: \"fa fa-user-circle-o\",\n            \"aria-hidden\": \"true\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 229,\n            columnNumber: 52\n          }, this), \" Assigee :- \"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 229,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n          id: \"taskUserInput\",\n          value: taskAssignee,\n          onChange: e => setTaskAssignee(e.target.value),\n          children: users.map(function (user) {\n            return /*#__PURE__*/_jsxDEV(\"option\", {\n              value: user.name,\n              children: user.name\n            }, user.id, false, {\n              fileName: _jsxFileName,\n              lineNumber: 232,\n              columnNumber: 37\n            }, this);\n          })\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 230,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 228,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"taskStagesOverlay\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          children: [/*#__PURE__*/_jsxDEV(\"i\", {\n            className: \"fa fa-check-square-o\",\n            \"aria-hidden\": \"true\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 238,\n            columnNumber: 28\n          }, this), \" Stages :- \"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 238,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(StagesDisplay, {\n          stages: taskStages,\n          closeStage: deleteStageHandle\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 239,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"addStageButton\",\n          onClick: addStageHandle,\n          children: [/*#__PURE__*/_jsxDEV(\"i\", {\n            className: \"fa fa-plus\",\n            \"aria-hidden\": \"true\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 241,\n            columnNumber: 25\n          }, this), \" Add Stage\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 240,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 237,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"taskStatusOverlay\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"taskSatusInput\",\n          children: [/*#__PURE__*/_jsxDEV(\"i\", {\n            className: \"fa fa-arrow-circle-right\",\n            \"aria-hidden\": \"true\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 246,\n            columnNumber: 53\n          }, this), \"Status :-\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 246,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n          id: \"taskStatusInput\",\n          value: taskStatus,\n          onChange: e => setTaskstatus(e.target.value),\n          children: [/*#__PURE__*/_jsxDEV(\"option\", {\n            value: \"Not started\",\n            children: \"Not started\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 249,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n            value: \"In-progress\",\n            children: \"In-progress\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 250,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n            value: \"On hold\",\n            children: \"On hold\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 251,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n            value: \"Completed\",\n            children: \"Completed\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 252,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 248,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 245,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"taskDateOverlay\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"taskDateInput\",\n          children: [/*#__PURE__*/_jsxDEV(\"i\", {\n            className: \"fa fa-clock-o\",\n            \"aria-hidden\": \"true\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 257,\n            columnNumber: 52\n          }, this), \" Due date :- \"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 257,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          value: taskDate,\n          onChange: e => setTaskdate(e.target.value),\n          type: \"date\",\n          id: \"taskDateInput\",\n          name: \"taskDateInput\",\n          placeholder: \"dd/mm/yyyy\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 258,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 256,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"overlayButtons\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"saveButton\",\n          onClick: saveCallBack,\n          children: [/*#__PURE__*/_jsxDEV(\"i\", {\n            className: \"fa fa-check\",\n            \"aria-hidden\": \"true\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 263,\n            columnNumber: 21\n          }, this), \" SAVE\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 262,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"deleteButton\",\n          onClick: deleteCallBack,\n          children: [/*#__PURE__*/_jsxDEV(\"i\", {\n            className: \"fa fa-times\",\n            \"aria-hidden\": \"true\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 266,\n            columnNumber: 21\n          }, this), \" DELETE CARD\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 265,\n          columnNumber: 17\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 261,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 211,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 210,\n    columnNumber: 9\n  }, this);\n}\n\n_s2(TaskOverlay, \"35SWAzulkc0sM/qalfkxrIP6Ez8=\");\n\n_c8 = TaskOverlay;\n\nfunction TasksContainer({\n  tasks,\n  users\n}) {\n  _s3();\n\n  const [overlay, setOverlay] = useState(null);\n\n  function editClickHandle(task) {\n    setOverlay(task);\n  }\n\n  function handleClose() {\n    setOverlay(null);\n  }\n\n  function handleSave(newTask) {\n    if (newTask.taskId == -1) {\n      newTask.taskId = tasks[tasks.length - 1].taskId + 1;\n      users.find(user => user.id == newTask.assignee).tasks.push(newTask.taskId);\n      tasks.push(newTask);\n    } else {\n      let ind = tasks.findIndex(task => task.taskId == newTask.taskId);\n      tasks[ind] = newTask;\n    }\n\n    taskMap.set(newTask.taskId, newTask);\n    setOverlay(null);\n  }\n\n  function handleDelete(id) {\n    let ind = tasks.findIndex(task => task.taskId == id);\n    tasks.splice(ind, 1);\n    setOverlay(null);\n  }\n\n  let taskMap = new Map();\n  tasks.forEach(element => {\n    taskMap.set(element.taskId, element);\n  });\n\n  if (overlay == null) {\n    return /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"board-lists\",\n        children: users.map(function (user) {\n          let userTasks = [];\n          user.tasks.forEach(id => userTasks.push(taskMap.get(id)));\n          return /*#__PURE__*/_jsxDEV(UserColumn, {\n            userTasks: userTasks,\n            userName: user.name,\n            editClickHandle: editClickHandle,\n            userId: user.id\n          }, user.id, false, {\n            fileName: _jsxFileName,\n            lineNumber: 318,\n            columnNumber: 36\n          }, this);\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 314,\n        columnNumber: 21\n      }, this)\n    }, void 0, false);\n  } else {\n    return /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"board-lists\",\n        children: users.map(function (user) {\n          let userTasks = [];\n          user.tasks.forEach(id => userTasks.push(taskMap.get(id)));\n          return /*#__PURE__*/_jsxDEV(UserColumn, {\n            userTasks: userTasks,\n            userName: user.name,\n            editClickHandle: editClickHandle\n          }, user.id, false, {\n            fileName: _jsxFileName,\n            lineNumber: 332,\n            columnNumber: 32\n          }, this);\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 328,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(TaskOverlay, {\n        task: overlay,\n        users: users,\n        handleClose: handleClose,\n        handleSave: handleSave,\n        handleDelete: handleDelete\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 335,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true);\n  }\n}\n\n_s3(TasksContainer, \"BLumxrP0tZHmh4Og9yCIuz5o8tk=\");\n\n_c9 = TasksContainer;\n\nfunction Tasks(props) {\n  let users = fetchUsers();\n  let tasks = fetchTasks();\n  return /*#__PURE__*/_jsxDEV(\"section\", {\n    className: \"board\",\n    children: /*#__PURE__*/_jsxDEV(TasksContainer, {\n      users: users,\n      tasks: tasks\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 347,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 346,\n    columnNumber: 9\n  }, this);\n}\n\n_c10 = Tasks;\n\nfunction fetchTasks() {\n  let tasks = JSON.parse(localStorage.getItem('tasks')) || [];\n\n  if (tasks.length == 0) {\n    let newTask1 = {};\n    newTask1.taskId = 0;\n    newTask1.imageUrl = \"assets/macd-first-page.jpeg\";\n    newTask1.title = \"Create welcome page of the restaurant\";\n    newTask1.assignee = 0;\n    newTask1.status = 0;\n    newTask1.dueDate = \"2020-12-25\";\n    newTask1.stages = {\n      \"Write HTML document\": false,\n      \"Add styling to the page using CSS\": false,\n      \"Add interaction using Javascript\": false,\n      \"Deploy the page\": false\n    };\n    tasks.push(newTask1);\n    let newTask2 = {};\n    newTask2.taskId = 1;\n    newTask2.imageUrl = \"assets/default.png\";\n    newTask2.title = \"create customer care utility\";\n    newTask2.assignee = 1;\n    newTask2.status = 0;\n    newTask2.dueDate = \"2020-12-25\";\n    newTask2.stages = {\n      \"Build static layout\": false,\n      \"Add UI in the page\": false,\n      \"Create chatbot\": false,\n      \"Design ML model for chatbot\": false\n    };\n    tasks.push(newTask2);\n    commitTasks(tasks);\n  }\n\n  return tasks;\n}\n\nfunction commitTasks(tasks) {\n  localStorage.setItem('tasks', JSON.stringify(tasks));\n}\n\nfunction fetchUsers() {\n  let users = JSON.parse(localStorage.getItem('users'));\n  return users;\n}\n\nfunction commitUsers(users) {\n  localStorage.setItem('users', JSON.stringify(users));\n}\n\nexport default Tasks;\n\nvar _c, _c2, _c3, _c4, _c5, _c6, _c7, _c8, _c9, _c10;\n\n$RefreshReg$(_c, \"TaskInfo\");\n$RefreshReg$(_c2, \"TaskImage$React.memo\");\n$RefreshReg$(_c3, \"TaskImage\");\n$RefreshReg$(_c4, \"TaskCard$React.memo\");\n$RefreshReg$(_c5, \"TaskCard\");\n$RefreshReg$(_c6, \"UserColumn\");\n$RefreshReg$(_c7, \"StagesDisplay\");\n$RefreshReg$(_c8, \"TaskOverlay\");\n$RefreshReg$(_c9, \"TasksContainer\");\n$RefreshReg$(_c10, \"Tasks\");","map":{"version":3,"sources":["/Users/dhruvpatel/Desktop/project-react/src/Tasks.js"],"names":["faUserInjured","React","useMemo","ReactDOM","useCallback","useState","statusMapping","monthMapping","statusColorMapping","mapStatus","getDateString","date","dateString","slice","getStageString","stages","totalStages","completedStages","prop","stagesString","TaskInfo","task","color","status","dueDate","TaskImage","memo","src","TaskCard","editClick","editCallback","imageUrl","title","UserColumn","userTasks","userName","editClickHandle","userId","assignee","map","taskId","StagesDisplay","closeStage","stageArray","stage","push","handleChange","e","target","value","dataset","stagename","closeStageCallback","index","TaskOverlay","users","handleClose","handleSave","handleDelete","selectedIndex","findIndex","user","id","taskImage","setTaskImage","taskTitle","setTaskTitle","taskAssignee","setTaskAssignee","name","taskStages","setTaskstages","taskStatus","setTaskstatus","taskDate","setTaskdate","deleteStageHandle","stageName","newStages","addStageHandle","prompt","closeCallback","saveCallBack","currentAssigneeIndex","newTask","isNaN","taskIndex","tasks","splice","deleteCallBack","ind","display","TasksContainer","overlay","setOverlay","length","find","taskMap","set","Map","forEach","element","get","Tasks","props","fetchUsers","fetchTasks","JSON","parse","localStorage","getItem","newTask1","newTask2","commitTasks","setItem","stringify","commitUsers"],"mappings":"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","sourcesContent":["import { faUserInjured } from '@fortawesome/free-solid-svg-icons';\nimport React from 'react';\nimport { useMemo } from 'react';\nimport ReactDOM from 'react-dom';\nimport { useCallback, useState } from 'react/cjs/react.development';\n\nlet statusMapping = [\"Not started\" , \"In-progress\" , \"On hold\" , \"Completed\"];\nlet monthMapping = [\"Jan\" , \"Feb\" , \"Mar\" , \"Apr\" , \"May\" , \"Jun\" , \"Jul\" , \"Aug\" , \"Sep\" , \"Oct\" , \"Nov\", \"Dec\"];\nlet statusColorMapping = [\"yellow\" , \"purple\" , \"red\" , \"chartreuse\"];\nlet mapStatus = {\n    \"Not started\" : 0,\n    \"In-progress\" : 1,\n    \"On hold\" : 2,\n    \"Completed\" : 3,\n}\n\n\nfunction getDateString(date) {\n    let dateString = \" \";\n    dateString+=date.slice(8,10);\n    dateString+=\" \";\n    dateString+=monthMapping[+date.slice(5,7)-1];\n    dateString+=\",\";\n    dateString+=date.slice(0,4);\n    return dateString;\n}\n\nfunction getStageString(stages) {\n    let totalStages = 0;\n    let completedStages = 0;\n    for(let prop in stages)\n    {\n        totalStages++;\n        if(stages[prop])\n        {\n            completedStages++;\n        }\n    }\n    let stagesString = \" \" + completedStages + \"/\" + totalStages;\n    return stagesString;\n}\n\nfunction TaskInfo({task}) {\n    return(\n        <div className=\"taskInfo\">\n            <span className=\"taskStatus\">\n                <i className=\"fa fa-square taskStatusSymbol\" aria-hidden=\"true\" style={{color : statusColorMapping[task.status]}}></i> {statusMapping[task.status]}\n            </span>\n            <span className=\"taskDue\">\n                <i className=\"fa fa-clock-o\" aria-hidden=\"true\"></i> {getDateString(task.dueDate)}\n            </span>\n            <span>\n                <i className=\"fa fa-check-square-o\" aria-hidden=\"true\"></i> {getStageString(task.stages)}\n            </span>\n        </div>\n    );\n}\n\nconst TaskImage = React.memo(function({src}) {\n    return (\n        <div className=\"taskImage\">\n            <img src = {src} height=\"160px\" width=\"252px\"/>\n        </div>\n    );\n})\n\nconst TaskCard = React.memo(function({task,editClick}) {\n\n    function editCallback() {\n        editClick(task);\n    }\n\n    return (\n        <div className=\"card\" onClick={editCallback}>\n            <TaskImage src={task.imageUrl} />\n            <div className=\"taskTitle\">\n                {task.title}\n            </div>\n            <hr className=\"titleLineBreaks\" />\n            <TaskInfo task={task} />\n        </div>\n    )\n});\n\nfunction UserColumn({userTasks,userName,editClickHandle,userId}) {\n\n    const editClick = useCallback(() => editClickHandle(task),[]);\n\n    return (\n        <section className=\"board-list\">\n            <div className=\"tasksAdd\" onClick={() => editClick({assignee: userId,imageUrl: \"assets/default.png\"})}>\n                <i className=\"fa fa-plus-circle\" aria-hidden=\"true\"></i>\n            </div>\n            <div className=\"list-title\">\n                {userName}\n            </div>\n            {userTasks.map(task => <TaskCard task={task} key={task.taskId} editClick={editClick}/>)}\n        </section>\n    );\n}\n\nfunction StagesDisplay({stages,closeStage}) {\n    let stageArray = [];\n    for(let stage in stages) {\n        stageArray.push(stage);\n    }\n\n    function handleChange(e) {\n        if(e.target.value == \"on\")\n        {\n            stages[e.target.dataset.stagename] = true;\n        }\n        else\n        {\n            stages[e.target.dataset.stagename] = false;\n        }\n    }\n\n    function closeStageCallback(e) {\n        closeStage(e.target.dataset.stagename);\n    }\n\n    return (\n        <ul className=\"stagesList\"> \n            {stageArray.map(function(stage,index){\n                return (<li key={index}><input type=\"checkbox\" defaultChecked={stages[stage]} onChange={handleChange} data-stagename={stage}/>{` ${stage}`}\n                <span className=\"stageCloseButton\" onClick={closeStageCallback} data-stagename={stage}>{\" \\u274c\"}</span> \n                </li>);\n            }   )}\n        </ul>\n    );\n}\n\nfunction TaskOverlay({task,users,handleClose,handleSave,handleDelete}) {\n\n    let selectedIndex = useMemo(() => users.findIndex((user) => user.id == task.assignee),[task]);\n\n    const [taskImage,setTaskImage] = useState(task.imageUrl);\n    const [taskTitle,setTaskTitle] = useState(task.title);\n    const [taskAssignee,setTaskAssignee] = useState(users[selectedIndex].name);\n    const [taskStages,setTaskstages] = useState(task.stages);\n    const [taskStatus,setTaskstatus] = useState(statusMapping[task.status]);\n    const [taskDate,setTaskdate] = useState(task.dueDate);\n\n    function deleteStageHandle(stageName) {\n        let newStages = {};\n        for(let stage in taskStages) {\n            newStages[stage] = taskStages[stage];\n        }\n        delete newStages[stageName];\n        setTaskstages(newStages);\n    }\n\n    function addStageHandle() {\n        let stageName = prompt(\"Enter stage name:- \",\"\");\n        if(stageName==\"\" || stageName == null)\n        {\n            return;\n        }\n        let newStages = {};\n        for(let stage in taskStages) {\n            newStages[stage] = taskStages[stage];\n        }\n        newStages[stageName] = false;\n        setTaskstages(newStages);\n    }\n\n    function closeCallback () {\n        handleClose();\n    }\n\n    function saveCallBack() {\n        let currentAssigneeIndex = users.findIndex((user) => user.name == taskAssignee);\n        let newTask = {};\n        if(isNaN(task.taskId)) {\n            newTask.taskId = -1;\n        }\n        else {\n            newTask.taskId = task.taskId;\n            if(selectedIndex != currentAssigneeIndex) {\n                let taskIndex = users[selectedIndex].tasks.findIndex((taskId) => taskId == newTask.taskId);\n                users[selectedIndex].tasks.splice(taskIndex,1);\n                users[currentAssigneeIndex].tasks.push(newTask.taskId);\n            }\n        }\n        newTask.imageUrl = taskImage;\n        newTask.title = taskTitle;\n        newTask.assignee = users[currentAssigneeIndex].id;\n        newTask.status = mapStatus[taskStatus];\n        newTask.stages = {};\n        for(let stage in taskStages) {\n            newTask.stages[stage] = taskStages[stage];\n        }\n        newTask.dueDate = taskDate;\n        handleSave(newTask);\n    }\n\n    function deleteCallBack() {\n        if(isNaN(task.taskId)) {\n            closeCallback();\n        }\n        else {\n            let ind = users[selectedIndex].tasks.findIndex((taskId) => taskId == task.taskId);\n            users[selectedIndex].tasks.splice(ind,1);\n            handleDelete(task.taskId);\n        }\n    }\n\n    return (\n        <div className=\"tasksOverlayContainer\">\n            <div className=\"tasksOverlay\">\n                <div className=\"closeButton\" onClick={closeCallback}>\n                X\n                </div>\n\n                <div className=\"taskImageOverlay\">\n                    <label htmlFor=\"task-image-input\">\n                        <img src = {taskImage} height=\"160px\" width=\"252px\" />\n                    </label>\n                    <input type=\"file\" id=\"task-image-input\" accept=\"image/*\" style={{display:'none'}} />\n                </div>\n                \n                <div className=\"taskTitleOverlay\">\n                    <label htmlFor=\"taskTitleInput\"><i className=\"fa fa-pencil-square-o\" aria-hidden=\"true\"></i> Title :- </label>\n                    <input value={taskTitle} onChange={(e) => setTaskTitle(e.target.value)} type=\"text\" id=\"taskTitleInput\" name=\"taskTitleInput\" />  \n                </div>\n\n                <div className=\"taskUserOverlay\">\n                    <label htmlFor=\"taskUserInput\"><i className=\"fa fa-user-circle-o\" aria-hidden=\"true\"></i> Assigee :- </label>\n                    <select id=\"taskUserInput\" value={taskAssignee} onChange={(e) => setTaskAssignee(e.target.value)}>\n                        {users.map(function(user) {\n                            return (<option value={user.name} key={user.id}>{user.name}</option>);\n                        })}\n                    </select>  \n                </div>\n\n                <div className=\"taskStagesOverlay\">\n                    <label><i className=\"fa fa-check-square-o\" aria-hidden=\"true\"></i> Stages :- </label>\n                    <StagesDisplay stages={taskStages} closeStage={deleteStageHandle}/>\n                    <div className=\"addStageButton\" onClick={addStageHandle}>\n                        <i className=\"fa fa-plus\" aria-hidden=\"true\"></i> Add Stage\n                    </div>\n                </div>\n\n                <div className=\"taskStatusOverlay\">\n                    <label htmlFor=\"taskSatusInput\"><i className=\"fa fa-arrow-circle-right\" aria-hidden=\"true\"></i>\n                        Status :-</label>\n                    <select id=\"taskStatusInput\" value={taskStatus} onChange={(e) => setTaskstatus(e.target.value)}>\n                        <option value=\"Not started\">Not started</option>\n                        <option value=\"In-progress\">In-progress</option>\n                        <option value=\"On hold\">On hold</option>\n                        <option value=\"Completed\">Completed</option>\n                    </select>\n                </div>\n\n                <div className=\"taskDateOverlay\">\n                    <label htmlFor=\"taskDateInput\"><i className=\"fa fa-clock-o\" aria-hidden=\"true\"></i> Due date :- </label>\n                    <input value={taskDate} onChange={(e) => setTaskdate(e.target.value)} type=\"date\" id=\"taskDateInput\" name=\"taskDateInput\" placeholder=\"dd/mm/yyyy\" />  \n                </div>\n\n                <div className=\"overlayButtons\">\n                <div className=\"saveButton\" onClick={saveCallBack}>\n                    <i className=\"fa fa-check\" aria-hidden=\"true\"></i> SAVE\n                </div>\n                <div className=\"deleteButton\" onClick={deleteCallBack}>\n                    <i className=\"fa fa-times\" aria-hidden=\"true\"></i> DELETE CARD\n                </div>\n                </div>\n            </div>\n        </div>\n    );\n}\n\nfunction TasksContainer({tasks,users}) {\n\n    const [overlay,setOverlay] = useState(null);\n\n    function editClickHandle(task) {\n        setOverlay(task);\n    }\n\n    function handleClose() {\n        setOverlay(null);\n    }\n\n    function handleSave(newTask) {\n        if(newTask.taskId == -1) {\n            newTask.taskId = tasks[tasks.length-1].taskId+1;\n            (users.find((user) => user.id == newTask.assignee)).tasks.push(newTask.taskId);\n            tasks.push(newTask);\n        }\n        else {\n            let ind = tasks.findIndex((task) => task.taskId == newTask.taskId);\n            tasks[ind] = newTask;\n        }\n        taskMap.set(newTask.taskId,newTask);\n        setOverlay(null);\n    }\n    \n    function handleDelete(id) {\n        let ind = tasks.findIndex((task) => task.taskId == id);\n        tasks.splice(ind,1);\n        setOverlay(null);\n    }\n\n    let taskMap = new Map();\n    tasks.forEach(element => {\n        taskMap.set(element.taskId,element);\n    });\n\n    if(overlay == null) {\n        return(\n                <>\n                    <div className=\"board-lists\">\n                        {users.map(function (user) {\n                            let userTasks = [];\n                            user.tasks.forEach(id => userTasks.push(taskMap.get(id)));\n                            return <UserColumn userTasks={userTasks} key={user.id} userName={user.name} editClickHandle={editClickHandle} userId={user.id}/>\n                        })}\n                    </div> \n                </>\n            )\n    }\n\n    else {\n        return(\n            <>\n                <div className=\"board-lists\">\n                    {users.map(function (user) {\n                        let userTasks = [];\n                        user.tasks.forEach(id => userTasks.push(taskMap.get(id)));\n                        return <UserColumn userTasks={userTasks} key={user.id} userName={user.name} editClickHandle={editClickHandle}/>\n                    })}\n                </div> \n                <TaskOverlay task={overlay} users={users} handleClose={handleClose} handleSave={handleSave} handleDelete={handleDelete}/>\n            </>\n        )\n    }\n}\n\n\nfunction Tasks(props) {\n    let users = fetchUsers();\n    let tasks = fetchTasks();\n    return (\n        <section className=\"board\">\n            <TasksContainer users={users} tasks={tasks} />\n        </section>\n    )\n}\n\nfunction fetchTasks() {\n    let tasks = JSON.parse(localStorage.getItem('tasks')) || [];\n    if(tasks.length == 0)\n    {\n        let newTask1 = {};\n        newTask1.taskId = 0;\n        newTask1.imageUrl = \"assets/macd-first-page.jpeg\";\n        newTask1.title = \"Create welcome page of the restaurant\";\n        newTask1.assignee = 0;\n        newTask1.status = 0;\n        newTask1.dueDate = \"2020-12-25\";\n        newTask1.stages = {\n            \"Write HTML document\" : false,\n            \"Add styling to the page using CSS\" : false,\n            \"Add interaction using Javascript\" : false,\n            \"Deploy the page\" : false,\n        };\n        tasks.push(newTask1);\n\n        let newTask2 = {};\n        newTask2.taskId = 1;\n        newTask2.imageUrl = \"assets/default.png\";\n        newTask2.title = \"create customer care utility\";\n        newTask2.assignee = 1;\n        newTask2.status = 0;\n        newTask2.dueDate = \"2020-12-25\";\n        newTask2.stages = {\n            \"Build static layout\" : false,\n            \"Add UI in the page\" : false,\n            \"Create chatbot\" : false,\n            \"Design ML model for chatbot\" : false,\n        };\n        tasks.push(newTask2);\n        commitTasks(tasks);\n    }\n    return tasks;\n}\n\nfunction commitTasks(tasks) {\n    localStorage.setItem('tasks',JSON.stringify(tasks));\n}\n\nfunction fetchUsers() {\n    let users = JSON.parse(localStorage.getItem('users'));\n    return users;\n}\n\nfunction commitUsers(users) {\n    localStorage.setItem('users',JSON.stringify(users));\n}\n\nexport default Tasks;"]},"metadata":{},"sourceType":"module"}