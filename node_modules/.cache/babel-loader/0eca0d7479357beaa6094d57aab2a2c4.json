{"ast":null,"code":"var _jsxFileName = \"/Users/dhruvpatel/Desktop/project-react/src/Tasks.js\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction UserColumn({\n  userTasks,\n  userName\n}) {\n  return /*#__PURE__*/_jsxDEV(\"section\", {\n    className: \"board-list\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"tasksAdd\",\n      children: /*#__PURE__*/_jsxDEV(\"i\", {\n        className: \"fa fa-plus-circle\",\n        \"aria-hidden\": \"true\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 6,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 5,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"list-title\",\n      children: userName\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 8,\n      columnNumber: 13\n    }, this), userTasks.map(task => /*#__PURE__*/_jsxDEV(TaskCard, {\n      task: task\n    }, task.taskId, false, {\n      fileName: _jsxFileName,\n      lineNumber: 11,\n      columnNumber: 36\n    }, this))]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 4,\n    columnNumber: 9\n  }, this);\n}\n\n_c = UserColumn;\n\nfunction TasksContainer({\n  tasks,\n  users\n}) {\n  let taskMap = new Map();\n  tasks.forEach(element => {\n    taskMap.set(element.taskId, element);\n  });\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"board-lists\",\n    children: users.map(function (user) {\n      let userTasks = [];\n      user.tasks.forEach(id => userTasks.push(taskMap.get(id)));\n      return /*#__PURE__*/_jsxDEV(UserColumn, {\n        userTasks: userTasks,\n        userName: user.name\n      }, user.id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 28,\n        columnNumber: 24\n      }, this);\n    })\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 24,\n    columnNumber: 9\n  }, this);\n}\n\n_c2 = TasksContainer;\n\nfunction Tasks(props) {\n  let users = fetchUsers();\n  let tasks = fetchTasks();\n  return /*#__PURE__*/_jsxDEV(\"section\", {\n    className: \"board\",\n    children: /*#__PURE__*/_jsxDEV(TasksContainer, {\n      users: users,\n      tasks: tasks\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 38,\n    columnNumber: 9\n  }, this);\n}\n\n_c3 = Tasks;\n\nfunction fetchTasks() {\n  let tasks = JSON.parse(localStorage.getItem('tasks')) || [];\n\n  if (tasks.length == 0) {\n    let newTask1 = {};\n    newTask1.taskId = 0;\n    newTask1.imageUrl = \"assets/macd-first-page.jpeg\";\n    newTask1.title = \"Create welcome page of the restaurant\";\n    newTask1.assignee = 0;\n    newTask1.status = 0;\n    newTask1.dueDate = \"2020-12-25\";\n    newTask1.stages = {\n      \"Write HTML document\": false,\n      \"Add styling to the page using CSS\": false,\n      \"Add interaction using Javascript\": false,\n      \"Deploy the page\": false\n    };\n    tasks.push(newTask1);\n    let newTask2 = {};\n    newTask2.taskId = 1;\n    newTask2.imageUrl = \"assets/default.png\";\n    newTask2.title = \"create customer care utility\";\n    newTask2.assignee = 1;\n    newTask2.status = 0;\n    newTask2.dueDate = \"2020-12-25\";\n    newTask2.stages = {\n      \"Build static layout\": false,\n      \"Add UI in the page\": false,\n      \"Create chatbot\": false,\n      \"Design ML model for chatbot\": false\n    };\n    tasks.push(newTask2);\n    commitTasks(tasks);\n  }\n\n  return tasks;\n}\n\nfunction commitTasks(tasks) {\n  localStorage.setItem('tasks', JSON.stringify(tasks));\n}\n\nfunction fetchUsers() {\n  let users = JSON.parse(localStorage.getItem('users'));\n  return users;\n}\n\nfunction commitUsers(users) {\n  localStorage.setItem('users', JSON.stringify(users));\n}\n\nexport default Tasks;\n\nvar _c, _c2, _c3;\n\n$RefreshReg$(_c, \"UserColumn\");\n$RefreshReg$(_c2, \"TasksContainer\");\n$RefreshReg$(_c3, \"Tasks\");","map":{"version":3,"sources":["/Users/dhruvpatel/Desktop/project-react/src/Tasks.js"],"names":["UserColumn","userTasks","userName","map","task","taskId","TasksContainer","tasks","users","taskMap","Map","forEach","element","set","user","id","push","get","name","Tasks","props","fetchUsers","fetchTasks","JSON","parse","localStorage","getItem","length","newTask1","imageUrl","title","assignee","status","dueDate","stages","newTask2","commitTasks","setItem","stringify","commitUsers"],"mappings":"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","sourcesContent":["\nfunction UserColumn({userTasks,userName}) {\n    return (\n        <section className=\"board-list\">\n            <div className=\"tasksAdd\">\n                <i className=\"fa fa-plus-circle\" aria-hidden=\"true\"></i>\n            </div>\n            <div className=\"list-title\">\n                {userName}\n            </div>\n            {userTasks.map(task => <TaskCard task={task} key={task.taskId}/>)}\n        </section>\n    );\n}\n\nfunction TasksContainer({tasks,users}) {\n\n    let taskMap = new Map();\n    tasks.forEach(element => {\n        taskMap.set(element.taskId,element);\n    });\n\n    return (\n        <div className=\"board-lists\">\n            {users.map(function (user) {\n                let userTasks = [];\n                user.tasks.forEach(id => userTasks.push(taskMap.get(id)));\n                return <UserColumn userTasks={userTasks} key={user.id} userName={user.name}/>\n            })}\n        </div>\n    )\n}\n\nfunction Tasks(props) {\n    let users = fetchUsers();\n    let tasks = fetchTasks();\n    return (\n        <section className=\"board\">\n            <TasksContainer users={users} tasks={tasks} />\n        </section>\n    )\n}\n\nfunction fetchTasks() {\n    let tasks = JSON.parse(localStorage.getItem('tasks')) || [];\n    if(tasks.length == 0)\n    {\n        let newTask1 = {};\n        newTask1.taskId = 0;\n        newTask1.imageUrl = \"assets/macd-first-page.jpeg\";\n        newTask1.title = \"Create welcome page of the restaurant\";\n        newTask1.assignee = 0;\n        newTask1.status = 0;\n        newTask1.dueDate = \"2020-12-25\";\n        newTask1.stages = {\n            \"Write HTML document\" : false,\n            \"Add styling to the page using CSS\" : false,\n            \"Add interaction using Javascript\" : false,\n            \"Deploy the page\" : false,\n        };\n        tasks.push(newTask1);\n\n        let newTask2 = {};\n        newTask2.taskId = 1;\n        newTask2.imageUrl = \"assets/default.png\";\n        newTask2.title = \"create customer care utility\";\n        newTask2.assignee = 1;\n        newTask2.status = 0;\n        newTask2.dueDate = \"2020-12-25\";\n        newTask2.stages = {\n            \"Build static layout\" : false,\n            \"Add UI in the page\" : false,\n            \"Create chatbot\" : false,\n            \"Design ML model for chatbot\" : false,\n        };\n        tasks.push(newTask2);\n        commitTasks(tasks);\n    }\n    return tasks;\n}\n\nfunction commitTasks(tasks) {\n    localStorage.setItem('tasks',JSON.stringify(tasks));\n}\n\nfunction fetchUsers() {\n    let users = JSON.parse(localStorage.getItem('users'));\n    return users;\n}\n\nfunction commitUsers(users) {\n    localStorage.setItem('users',JSON.stringify(users));\n}\n\nexport default Tasks;"]},"metadata":{},"sourceType":"module"}