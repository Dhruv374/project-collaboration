{"ast":null,"code":"var _jsxFileName = \"/Users/dhruvpatel/Desktop/project-react/src/Tasks.js\";\nimport React from 'react';\nimport ReactDOM from 'react-dom';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nlet statusMapping = [\"Not started\", \"In-progress\", \"On hold\", \"Completed\"];\nlet monthMapping = [\"Jan\", \"Feb\", \"Mar\", \"Apr\", \"May\", \"Jun\", \"Jul\", \"Aug\", \"Sep\", \"Oct\", \"Nov\", \"Dec\"];\n\nfunction getDateString(date) {\n  let dateString = \" \";\n  dateString += date.slice(8, 10);\n  dateString += \" \";\n  dateString += monthMapping[+date.slice(5, 7) - 1];\n  dateString += \",\";\n  dateString += date.slice(0, 4);\n  return dateString;\n}\n\nfunction getStageString(stages) {\n  let totalStages = 0;\n  let completedStages = 0;\n\n  for (let prop in stages) {\n    totalStages++;\n\n    if (stages[prop]) {\n      completedStages++;\n    }\n  }\n\n  let stagesString = \" \" + completedStages + \"/\" + totalStages;\n  return stagesString;\n}\n\nfunction TaskInfo({\n  task\n}) {\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"taskInfo\",\n    children: [/*#__PURE__*/_jsxDEV(\"span\", {\n      className: \"taskStatus\",\n      children: [/*#__PURE__*/_jsxDEV(\"i\", {\n        className: \"fa fa-square taskStatusSymbol\",\n        \"aria-hidden\": \"true\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 17\n      }, this), \" \", statusMapping[task.status]]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n      className: \"taskDue\",\n      children: [/*#__PURE__*/_jsxDEV(\"i\", {\n        className: \"fa fa-clock-o\",\n        \"aria-hidden\": \"true\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 17\n      }, this), \" \", getDateString(task.dueDate)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n      children: [/*#__PURE__*/_jsxDEV(\"i\", {\n        className: \"fa fa-check-square-o\",\n        \"aria-hidden\": \"true\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 17\n      }, this), \" \", getStageString(task.stages)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 34,\n    columnNumber: 9\n  }, this);\n}\n\n_c = TaskInfo;\nconst TaskImage = /*#__PURE__*/React.memo(_c2 = function ({\n  src\n}) {\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"taskImage\",\n    children: /*#__PURE__*/_jsxDEV(\"img\", {\n      src: src,\n      height: \"160px\",\n      width: \"252px\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 50,\n    columnNumber: 9\n  }, this);\n});\n_c3 = TaskImage;\n\nfunction TaskCard({\n  task\n}) {\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"card\",\n    children: [/*#__PURE__*/_jsxDEV(TaskImage, {\n      src: src\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"taskTitle\",\n      children: task.title\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"hr\", {\n      class: \"titleLineBreaks\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(TaskInfo, {\n      task: task\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 58,\n    columnNumber: 9\n  }, this);\n}\n\n_c4 = TaskCard;\n\nfunction UserColumn({\n  userTasks,\n  userName\n}) {\n  return /*#__PURE__*/_jsxDEV(\"section\", {\n    className: \"board-list\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"tasksAdd\",\n      children: /*#__PURE__*/_jsxDEV(\"i\", {\n        className: \"fa fa-plus-circle\",\n        \"aria-hidden\": \"true\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 73,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"list-title\",\n      children: userName\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 13\n    }, this), userTasks.map(task => /*#__PURE__*/_jsxDEV(TaskCard, {\n      task: task\n    }, task.taskId, false, {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 36\n    }, this))]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 71,\n    columnNumber: 9\n  }, this);\n}\n\n_c5 = UserColumn;\n\nfunction TasksContainer({\n  tasks,\n  users\n}) {\n  let taskMap = new Map();\n  tasks.forEach(element => {\n    taskMap.set(element.taskId, element);\n  });\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"board-lists\",\n    children: users.map(function (user) {\n      let userTasks = [];\n      user.tasks.forEach(id => userTasks.push(taskMap.get(id)));\n      return /*#__PURE__*/_jsxDEV(UserColumn, {\n        userTasks: userTasks,\n        userName: user.name\n      }, user.id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 95,\n        columnNumber: 24\n      }, this);\n    })\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 91,\n    columnNumber: 9\n  }, this);\n}\n\n_c6 = TasksContainer;\n\nfunction Tasks(props) {\n  let users = fetchUsers();\n  let tasks = fetchTasks();\n  return /*#__PURE__*/_jsxDEV(\"section\", {\n    className: \"board\",\n    children: /*#__PURE__*/_jsxDEV(TasksContainer, {\n      users: users,\n      tasks: tasks\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 106,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 105,\n    columnNumber: 9\n  }, this);\n}\n\n_c7 = Tasks;\n\nfunction fetchTasks() {\n  let tasks = JSON.parse(localStorage.getItem('tasks')) || [];\n\n  if (tasks.length == 0) {\n    let newTask1 = {};\n    newTask1.taskId = 0;\n    newTask1.imageUrl = \"assets/macd-first-page.jpeg\";\n    newTask1.title = \"Create welcome page of the restaurant\";\n    newTask1.assignee = 0;\n    newTask1.status = 0;\n    newTask1.dueDate = \"2020-12-25\";\n    newTask1.stages = {\n      \"Write HTML document\": false,\n      \"Add styling to the page using CSS\": false,\n      \"Add interaction using Javascript\": false,\n      \"Deploy the page\": false\n    };\n    tasks.push(newTask1);\n    let newTask2 = {};\n    newTask2.taskId = 1;\n    newTask2.imageUrl = \"assets/default.png\";\n    newTask2.title = \"create customer care utility\";\n    newTask2.assignee = 1;\n    newTask2.status = 0;\n    newTask2.dueDate = \"2020-12-25\";\n    newTask2.stages = {\n      \"Build static layout\": false,\n      \"Add UI in the page\": false,\n      \"Create chatbot\": false,\n      \"Design ML model for chatbot\": false\n    };\n    tasks.push(newTask2);\n    commitTasks(tasks);\n  }\n\n  return tasks;\n}\n\nfunction commitTasks(tasks) {\n  localStorage.setItem('tasks', JSON.stringify(tasks));\n}\n\nfunction fetchUsers() {\n  let users = JSON.parse(localStorage.getItem('users'));\n  return users;\n}\n\nfunction commitUsers(users) {\n  localStorage.setItem('users', JSON.stringify(users));\n}\n\nexport default Tasks;\n\nvar _c, _c2, _c3, _c4, _c5, _c6, _c7;\n\n$RefreshReg$(_c, \"TaskInfo\");\n$RefreshReg$(_c2, \"TaskImage$React.memo\");\n$RefreshReg$(_c3, \"TaskImage\");\n$RefreshReg$(_c4, \"TaskCard\");\n$RefreshReg$(_c5, \"UserColumn\");\n$RefreshReg$(_c6, \"TasksContainer\");\n$RefreshReg$(_c7, \"Tasks\");","map":{"version":3,"sources":["/Users/dhruvpatel/Desktop/project-react/src/Tasks.js"],"names":["React","ReactDOM","statusMapping","monthMapping","getDateString","date","dateString","slice","getStageString","stages","totalStages","completedStages","prop","stagesString","TaskInfo","task","status","dueDate","TaskImage","memo","src","TaskCard","title","UserColumn","userTasks","userName","map","taskId","TasksContainer","tasks","users","taskMap","Map","forEach","element","set","user","id","push","get","name","Tasks","props","fetchUsers","fetchTasks","JSON","parse","localStorage","getItem","length","newTask1","imageUrl","assignee","newTask2","commitTasks","setItem","stringify","commitUsers"],"mappings":"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","sourcesContent":["import React from 'react';\nimport ReactDOM from 'react-dom';\n\nlet statusMapping = [\"Not started\" , \"In-progress\" , \"On hold\" , \"Completed\"];\nlet monthMapping = [\"Jan\" , \"Feb\" , \"Mar\" , \"Apr\" , \"May\" , \"Jun\" , \"Jul\" , \"Aug\" , \"Sep\" , \"Oct\" , \"Nov\", \"Dec\"];\n\nfunction getDateString(date) {\n    let dateString = \" \";\n    dateString+=date.slice(8,10);\n    dateString+=\" \";\n    dateString+=monthMapping[+date.slice(5,7)-1];\n    dateString+=\",\";\n    dateString+=date.slice(0,4);\n    return dateString;\n}\n\nfunction getStageString(stages) {\n    let totalStages = 0;\n    let completedStages = 0;\n    for(let prop in stages)\n    {\n        totalStages++;\n        if(stages[prop])\n        {\n            completedStages++;\n        }\n    }\n    let stagesString = \" \" + completedStages + \"/\" + totalStages;\n    return stagesString;\n}\n\nfunction TaskInfo({task}) {\n    return(\n        <div className=\"taskInfo\">\n            <span className=\"taskStatus\">\n                <i className=\"fa fa-square taskStatusSymbol\" aria-hidden=\"true\"></i> {statusMapping[task.status]}\n            </span>\n            <span className=\"taskDue\">\n                <i className=\"fa fa-clock-o\" aria-hidden=\"true\"></i> {getDateString(task.dueDate)}\n            </span>\n            <span>\n                <i className=\"fa fa-check-square-o\" aria-hidden=\"true\"></i> {getStageString(task.stages)}\n            </span>\n        </div>\n    );\n}\n\nconst TaskImage = React.memo(function({src}) {\n    return (\n        <div className=\"taskImage\">\n            <img src = {src} height=\"160px\" width=\"252px\"/>\n        </div>\n    );\n})\n\nfunction TaskCard({task}) {\n    return (\n        <div className=\"card\">\n            <TaskImage src={src} />\n            <div className=\"taskTitle\">\n                {task.title}\n            </div>\n            <hr class=\"titleLineBreaks\" />\n            <TaskInfo task={task} />\n        </div>\n    )\n}\n\nfunction UserColumn({userTasks,userName}) {\n    return (\n        <section className=\"board-list\">\n            <div className=\"tasksAdd\">\n                <i className=\"fa fa-plus-circle\" aria-hidden=\"true\"></i>\n            </div>\n            <div className=\"list-title\">\n                {userName}\n            </div>\n            {userTasks.map(task => <TaskCard task={task} key={task.taskId}/>)}\n        </section>\n    );\n}\n\nfunction TasksContainer({tasks,users}) {\n\n    let taskMap = new Map();\n    tasks.forEach(element => {\n        taskMap.set(element.taskId,element);\n    });\n\n    return (\n        <div className=\"board-lists\">\n            {users.map(function (user) {\n                let userTasks = [];\n                user.tasks.forEach(id => userTasks.push(taskMap.get(id)));\n                return <UserColumn userTasks={userTasks} key={user.id} userName={user.name}/>\n            })}\n        </div>\n    )\n}\n\nfunction Tasks(props) {\n    let users = fetchUsers();\n    let tasks = fetchTasks();\n    return (\n        <section className=\"board\">\n            <TasksContainer users={users} tasks={tasks} />\n        </section>\n    )\n}\n\nfunction fetchTasks() {\n    let tasks = JSON.parse(localStorage.getItem('tasks')) || [];\n    if(tasks.length == 0)\n    {\n        let newTask1 = {};\n        newTask1.taskId = 0;\n        newTask1.imageUrl = \"assets/macd-first-page.jpeg\";\n        newTask1.title = \"Create welcome page of the restaurant\";\n        newTask1.assignee = 0;\n        newTask1.status = 0;\n        newTask1.dueDate = \"2020-12-25\";\n        newTask1.stages = {\n            \"Write HTML document\" : false,\n            \"Add styling to the page using CSS\" : false,\n            \"Add interaction using Javascript\" : false,\n            \"Deploy the page\" : false,\n        };\n        tasks.push(newTask1);\n\n        let newTask2 = {};\n        newTask2.taskId = 1;\n        newTask2.imageUrl = \"assets/default.png\";\n        newTask2.title = \"create customer care utility\";\n        newTask2.assignee = 1;\n        newTask2.status = 0;\n        newTask2.dueDate = \"2020-12-25\";\n        newTask2.stages = {\n            \"Build static layout\" : false,\n            \"Add UI in the page\" : false,\n            \"Create chatbot\" : false,\n            \"Design ML model for chatbot\" : false,\n        };\n        tasks.push(newTask2);\n        commitTasks(tasks);\n    }\n    return tasks;\n}\n\nfunction commitTasks(tasks) {\n    localStorage.setItem('tasks',JSON.stringify(tasks));\n}\n\nfunction fetchUsers() {\n    let users = JSON.parse(localStorage.getItem('users'));\n    return users;\n}\n\nfunction commitUsers(users) {\n    localStorage.setItem('users',JSON.stringify(users));\n}\n\nexport default Tasks;"]},"metadata":{},"sourceType":"module"}