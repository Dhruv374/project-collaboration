{"ast":null,"code":"import { useState } from \"react\";\nimport { act } from \"react-dom/test-utils\";\nimport Tasks from \"../Tasks\";\nlet users = [];\nlet newUser1 = {};\nnewUser1.id = 0;\nnewUser1.imageUrl = \"https://www.pavilionweb.com/wp-content/uploads/2017/03/man-300x300.png\";\nnewUser1.name = \"Dhruv Patel\";\nnewUser1.designation = \"project head\";\nnewUser1.location = \"Mumbai, India\";\nnewUser1.email = \"dhruv.patel@comapnay.com\";\nnewUser1.phone = \"917878345672\";\nnewUser1.tasks = [0];\nusers.push(newUser1);\nlet newUser2 = {};\nnewUser2.id = 1;\nnewUser2.imageUrl = \"assets/john-paul.jpeg\";\nnewUser2.name = \"John Paul\";\nnewUser2.designation = \"project manager\";\nnewUser2.location = \"New York, USA\";\nnewUser2.email = \"john.paul@comapnay.com\";\nnewUser2.phone = \"19998645408\";\nnewUser2.tasks = [1];\nusers.push(newUser2);\n\nconst rootReducer = (state = {\n  users: [],\n  tasks: []\n}, action) => {\n  switch (action.type) {\n    case \"ADD_USER\":\n      return { ...state,\n        users: [...state.users, action.payload]\n      };\n\n    case \"REMOVE_USER\":\n      return {\n        users: state.users.filter(user => user.id != action.payload.id),\n        tasks: state.tasks.filter(task => task.assignee != action.payload.id)\n      };\n\n    case \"ADD_TASK\":\n      {\n        let user = state.users.find(user => user.id == action.payload.task.assignee);\n        user.tasks.push(action.payload.task.taskId);\n        return {\n          users: state.users,\n          tasks: [...state.tasks, action.payload.task]\n        };\n      }\n\n    case \"REMOVE_TASK\":\n      {\n        let task = state.tasks.find(task => task.taskId == action.payload.taskId);\n        let user = state.users.find(user => user.id == task.assignee);\n        user.tasks = user.tasks.filter(taskId => taskId != action.payload.taskId);\n        return {\n          users: state.users,\n          tasks: state.tasks.filter(task => task.taskId != action.payload.taskId)\n        };\n      }\n\n    case \"UPDATE_USER\":\n      {\n        let ind = state.users.findIndex(user => user.id == action.payload.id);\n        return { ...state,\n          users: [...state.users.slice(0, ind), action.payload.user, ...state.users.slice(ind + 1)]\n        };\n      }\n\n    case \"UPDATE_TASK\":\n      {\n        let ind = state.tasks.findIndex(task => task.taskID == action.payload.taskId);\n\n        if (state.task[ind].assignee == action.payload.task.assignee) {\n          return { ...state,\n            tasks: [...state.tasks.slice(0, ind), action.payload.task, ...state.tasks.slice(ind + 1)]\n          };\n        } else {\n          let user = state.users.find(user => user.id == state.tasks[ind].assignee);\n          user.tasks = user.tasks.filter(taskId => taskId != action.payload.taskId);\n          let newUser = state.users.find(user => user.id == action.payload.task.taskID);\n          newUser.tasks = [...newUser.tasks, action.payload.task.taskID];\n          return {\n            users: state.users,\n            tasks: [...state.tasks.slice(0, ind), action.payload.task, ...state.tasks.slice(ind + 1)]\n          };\n        }\n      }\n\n    default:\n      return state;\n  }\n};\n\nexport default rootReducer;","map":{"version":3,"sources":["/Users/dhruvpatel/Desktop/poject-redux/src/store/reducers.js"],"names":["useState","act","Tasks","users","newUser1","id","imageUrl","name","designation","location","email","phone","tasks","push","newUser2","rootReducer","state","action","type","payload","filter","user","task","assignee","find","taskId","ind","findIndex","slice","taskID","newUser"],"mappings":"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","sourcesContent":["import { useState } from \"react\";\nimport { act } from \"react-dom/test-utils\";\nimport Tasks from \"../Tasks\";\n\nlet users = [];\nlet newUser1 = {};\nnewUser1.id = 0;\nnewUser1.imageUrl = \"https://www.pavilionweb.com/wp-content/uploads/2017/03/man-300x300.png\";\nnewUser1.name = \"Dhruv Patel\";\nnewUser1.designation = \"project head\";\nnewUser1.location = \"Mumbai, India\";\nnewUser1.email = \"dhruv.patel@comapnay.com\";\nnewUser1.phone = \"917878345672\";\nnewUser1.tasks = [0];\nusers.push(newUser1);\n\nlet newUser2 = {};\nnewUser2.id = 1;\nnewUser2.imageUrl = \"assets/john-paul.jpeg\";\nnewUser2.name = \"John Paul\";\nnewUser2.designation = \"project manager\";\nnewUser2.location = \"New York, USA\";\nnewUser2.email = \"john.paul@comapnay.com\";\nnewUser2.phone = \"19998645408\";\nnewUser2.tasks = [1];\nusers.push(newUser2);\n\n\nconst rootReducer = (state = {users: [],tasks: []},action) => {\n    switch (action.type) {\n        case \"ADD_USER\" :\n            return (\n                {\n                    ...state,\n                    users: [...state.users,action.payload],\n                }\n            )\n\n        case \"REMOVE_USER\" :\n            return (\n                {\n                    users: state.users.filter(user => user.id != action.payload.id),\n                    tasks: state.tasks.filter(task => task.assignee != action.payload.id),\n                }\n            )\n\n        case \"ADD_TASK\" : {\n            let user = state.users.find(user => user.id == action.payload.task.assignee);\n            user.tasks.push(action.payload.task.taskId);\n            return (\n                {\n                    users: state.users,\n                    tasks: [...state.tasks,action.payload.task],\n                }\n            )\n        }\n\n        case \"REMOVE_TASK\" : {\n            let task = state.tasks.find(task => task.taskId == action.payload.taskId);\n            let user = state.users.find(user => user.id == task.assignee);\n            user.tasks = user.tasks.filter(taskId => taskId != action.payload.taskId);\n            return (\n                {\n                    users: state.users,\n                    tasks: state.tasks.filter(task => task.taskId != action.payload.taskId),\n                }\n            )\n        }\n\n        case \"UPDATE_USER\" : {\n            let ind = state.users.findIndex(user => user.id == action.payload.id)\n            return (\n                {\n                    ...state,\n                    users: [...state.users.slice(0,ind),action.payload.user,...state.users.slice(ind+1)],\n                }\n            )\n        }\n\n        case \"UPDATE_TASK\" : {\n            let ind = state.tasks.findIndex(task=> task.taskID == action.payload.taskId);\n            if(state.task[ind].assignee == action.payload.task.assignee) {\n                return (\n                    {\n                        ...state,\n                        tasks: [...state.tasks.slice(0,ind),action.payload.task,...state.tasks.slice(ind+1)]\n                    }\n                )\n            }\n            else {\n                let user = state.users.find(user => user.id == state.tasks[ind].assignee);\n                user.tasks = user.tasks.filter(taskId => taskId != action.payload.taskId);\n                let newUser = state.users.find(user => user.id == action.payload.task.taskID);\n                newUser.tasks = [...newUser.tasks, action.payload.task.taskID];\n                return (\n                    {\n                        users: state.users,\n                        tasks: [...state.tasks.slice(0,ind),action.payload.task,...state.tasks.slice(ind+1)]\n                    }\n                )\n            }\n        }\n\n        default : return state;\n    }\n}\n\nexport default rootReducer;"]},"metadata":{},"sourceType":"module"}